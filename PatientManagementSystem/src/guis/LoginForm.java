/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guis;

import controller.LoginStrategyController;
import javax.swing.JOptionPane;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.util.List;
import java.util.ArrayList;
import strategies.AdminLoginStrategy;
import strategies.DoctorLoginStrategy;
import strategies.PatientLoginStrategy;
import strategies.SecretaryLoginStrategy;


/**
 *
 * @author Reece
 */
public class LoginForm extends javax.swing.JFrame {
    
    
    /**
     * Creates new form LoginForm
     */
    public LoginForm() {
        initComponents();
        this.setLocationRelativeTo(null);
        
        this.rootPane.setDefaultButton(loginButton);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        requestPatientAccountButton = new javax.swing.JButton();
        loginPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        idTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        passwordTextField = new javax.swing.JPasswordField();
        loginButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Login");

        requestPatientAccountButton.setText("Request Patient Account");
        requestPatientAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestPatientAccountButtonActionPerformed(evt);
            }
        });

        loginPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("User ID:");

        jLabel3.setText("Password");

        loginButton.setText("Login");
        loginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(loginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelButton))
                    .addComponent(idTextField)
                    .addComponent(passwordTextField))
                .addContainerGap())
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(idTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(loginButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(requestPatientAccountButton, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(jLabel1)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addGap(23, 23, 23)
                .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(requestPatientAccountButton)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // Close the programme
        System.exit(0);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void loginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginButtonActionPerformed
        
        String idInput = idTextField.getText();
        String passwordInput = new String(passwordTextField.getPassword());
        boolean isLoggedIn = false;
        
        if (idInput.contains("A"))
        {
            for (int i=0; i<LoginStrategyController.adminList.size(); i++)
            {
                if (idInput.equals(LoginStrategyController.adminList.get(i).getId()) && passwordInput.equals(LoginStrategyController.adminList.get(i).getPassword()))
                {        
                    idTextField.setText(null);
                    passwordTextField.setText(null);
            
                    AdminLoginStrategy adminMethod = new AdminLoginStrategy();
                    adminMethod.login(LoginStrategyController.adminList.get(i), this);
            
                    isLoggedIn = true;
                }
            }
            
            if (isLoggedIn == false)
            {
                JOptionPane.showMessageDialog(null, "Invalid login details", "Login Error", JOptionPane.ERROR_MESSAGE);
                passwordTextField.setText(null);
            }
        }
        else if (idInput.contains("P"))
        {
             for (int i=0; i<LoginStrategyController.patientList.size(); i++)
            {
                if (idInput.equals(LoginStrategyController.patientList.get(i).getId()) && passwordInput.equals(LoginStrategyController.patientList.get(i).getPassword()))
                {
                    idTextField.setText(null);
                    passwordTextField.setText(null);
            
                    PatientLoginStrategy patientMethod = new PatientLoginStrategy();
                    patientMethod.login(LoginStrategyController.patientList.get(i), this);
                    
                    isLoggedIn = true;
                }
            }
             
             if (isLoggedIn == false)
            {
                JOptionPane.showMessageDialog(null, "Invalid login details", "Login Error", JOptionPane.ERROR_MESSAGE);
                passwordTextField.setText(null);
            }
        }
        else if (idInput.contains("S"))
        {
            for (int i=0; i<LoginStrategyController.secretaryList.size(); i++)
            {
                if (idInput.equals(LoginStrategyController.secretaryList.get(i).getId()) && passwordInput.equals(LoginStrategyController.secretaryList.get(i).getPassword()))
                {
                    idTextField.setText(null);
                    passwordTextField.setText(null);
            
                    SecretaryLoginStrategy secretaryMethod = new SecretaryLoginStrategy();
                    secretaryMethod.login(LoginStrategyController.secretaryList.get(i), this);
                    
                    isLoggedIn = true;
                }
            }
            
            if (isLoggedIn == false)
            {
                JOptionPane.showMessageDialog(null, "Invalid login details", "Login Error", JOptionPane.ERROR_MESSAGE);
                passwordTextField.setText(null);
            }
        }
        else if (idInput.contains("D"))
        {
            for (int i=0; i<LoginStrategyController.doctorList.size(); i++)
            {
                if (idInput.equals(LoginStrategyController.doctorList.get(i).getId()) && passwordInput.equals(LoginStrategyController.doctorList.get(i).getPassword()))
                {
                    idTextField.setText(null);
                    passwordTextField.setText(null);
            
                    DoctorLoginStrategy doctorMethod = new DoctorLoginStrategy();
                    doctorMethod.login(LoginStrategyController.doctorList.get(i), this);
                    
                    isLoggedIn = true;
                }
            }
            
            if (isLoggedIn == false)
            {
                JOptionPane.showMessageDialog(null, "Invalid login details", "Login Error", JOptionPane.ERROR_MESSAGE);
                passwordTextField.setText(null);
            }
        }
        else
        {
            JOptionPane.showMessageDialog(null, "Invalid login details", "Login Error", JOptionPane.ERROR_MESSAGE);
            passwordTextField.setText(null);
        }
        
    }//GEN-LAST:event_loginButtonActionPerformed

    
    
    private void requestPatientAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestPatientAccountButtonActionPerformed
        
        RequestPatientAccountForm RequestInfo = new RequestPatientAccountForm();
        RequestInfo.setVisible(true);
        
        /*
        // Use this code for when you want to close specific form
        this.setDefaultCloseOperation(RequestPatientAccountForm.DISPOSE_ON_CLOSE);
        this.dispatchEvent(new WindowEvent(this, WindowEvent.WINDOW_CLOSING));
        */
    }//GEN-LAST:event_requestPatientAccountButtonActionPerformed

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField idTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton loginButton;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JPasswordField passwordTextField;
    private javax.swing.JButton requestPatientAccountButton;
    // End of variables declaration//GEN-END:variables


}
